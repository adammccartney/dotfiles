#+TITLE: Mail Config
#+PROPERTY: header-args :mkdirp yes

* mu4e email client config

A very nice client for email - a bit like mutt but in emacs. 
Basically a very clever wrapper over the [[https://www.djcbsoftware.nl/code/mu/][mu email client]]

It's probably possible to get mutt to work this well. Many thanks are
owed to David Wilson for his efforts with SystemCrafters. The structure
of the config below is very much his doing.


#+begin_src emacs-lisp :tangle emacs/.emacs.d/lisp/ad-mail.el

  (use-package mu4e
  :defer 20
  :config

  ;; Turn off auto fill
  (add-hook 'mu4e-compose-mode-hook 'turn-off-auto-fill)
  ;; automatically add a gpg signature to every email (signed as adam@mur.at) 
  (add-hook 'message-send-hook 'mml-secure-message-sign-pgpmime)

  ;; Refresh mail using isync every 10 minutes
  (setq mu4e-update-interval (* 10 60))
  (setq mu4e-get-mail-command "mbsync -a")
  (setq mu4e-maildir "~/.mail")

  (setq mu4e-attachment-dir
      (lambda (fname mtype)
      (cond 
          ;; docfiles go to ~/Documents/email-attachments
          ((and fname (string-match "\\.doc$" fname)) "~/Documents/email-attachments")
          ((and fname (string-match "\\.pdf$" fname)) "~/Documents/email-attachments")
          (t "~/Downloads/email-attachments")))) ;; everything else


  ;; Make sure that moving a message (like to Trash) causes the
  ;; message to get a new file name.  This helps to avoid the
  ;; dreaded "UID is N beyond highest assigned" error.
  ;; See this link for more info: https://stackoverflow.com/a/43461973
  (setq mu4e-change-filenames-when-moving t)
  (setq mu4e-contexts
          `(,(make-mu4e-context
              :name "murat"
              :match-func (lambda (msg) (when msg
                                          (string-prefix-p "/murat" (mu4e-message-field msg :maildir))))
              :vars '(
                      (user-full-name . "Adam McCartney")
                      (user-mail-address . "adam@mur.at")
                      (smtpmail-smtp-server . "smtp.mur.at")
                      (smtpmail-smtp-service . 465)
                      (smtpmail-stream-type . starttls)
                      (mu4e-sent-folder . "/murat/Sent")
                      (mu4e-trash-folder . "/murat/Trash")
                      (mu4e-drafts-folder . "/murat/Drafts")
                      (mu4e-refile-folder . "/murat/Archives")
                      (mu4e-sent-messages-behavior . sent)
                      (mu4e-compose-signature .
                                              (concat
                                                  "Adam McCartney | https://admccartney.mur.at \n"
                                                  "Markhofgasse 11-17/2/6 1030 Vienna\n"))))
              ,(make-mu4e-context
              :name "tuw"
              :match-func (lambda (msg) (when msg
                                          (string-prefix-p "/tuw" (mu4e-message-field msg :maildir))))
              :vars '(
                      (user-full-name . "Adam McCartney")
                      (user-mail-address . "adam.mccartney@tuwien.ac.at")
                      (smtpmail-smtp-server . "mail.intern.tuwien.ac.at")
                      (smtpmail-smtp-service . 993)
                      (smtpmail-stream-type . ssl)
                      (mu4e-send-folder . "/tuw/Sent Items")
                      (mu4e-trash-folder . "/tuw/Deleted Items")
                      (mu4e-junk-folder . "/tuw/Junk Email")
                      (mu4e-drafts-folder . "/tuw/Drafts")
                      (mu4e-refile-folder . "/tuw/Cabinet")
                      (mu4e-sent-message-behavior . sent)
                      (mu4e-compose-signature .
                                              (concat
                                                  "Adam McCartney\n"
                                                  "//------------\n"))))
          ))
  (setq mu4e-context-policy 'pick-first)
  ;; Prevent mu4e from permanently deleting trashed items
  ;; This snippet was taken from the following article:
  ;; http://cachestocaches.com/2017/3/complete-guide-email-emacs-using-mu-and-/
  (defun remove-nth-element (nth list)
      (if (zerop nth) (cdr list)
      (let ((last (nthcdr (1- nth) list)))
          (setcdr last (cddr last))
          list)))
  (setq mu4e-marks (remove-nth-element 5 mu4e-marks))
  (add-to-list 'mu4e-marks
              '(trash
                  :char ("d" . "â–¼")
                  :prompt "dtrash"
                  :dyn-target (lambda (target msg) (mu4e-get-trash-folder msg))
                  :action (lambda (docid msg target)
                          (mu4e~proc-move docid
                                          (mu4e~mark-check-target target) "-N"))))

  ;; Display options
  (setq mu4e-view-show-images t)
  (setq mu4e-view-show-addresses 't)

  ;; Composing mail
  (setq mu4e-compose-dont-reply-to-self t)

  ;; Use mu4e for sending e-mail
  (setq message-send-mail-function 'smtpmail-send-it)

  ;; don't keep message buffers around
  (setq message-kill-buffer-on-exit t)

  ;; Use a specific key for signing by referencing its thumbprint
  (setq mml-secure-openpgp-signers '("C5BF27EE0290CDE5BC8A8801A5FCE0B0A42EFDA8"))

  ;; Start mu4e in the background so that it syncs mail periodically
  (mu4e t))

#+end_src

Provide the above as an emacs-lisp package so it can be included in the init.el

    #+begin_src emacs-lisp :tangle emacs/.emacs.d/lisp/ad-mail.el
    (provide 'ad-mail)
    #+end_src


** isync 

#+begin_src conf :tangle .mbsyncrc
IMAPAccount murat 
# Address to connect to
Host imap.mur.at
User adam 
AuthMechs LOGIN
PassCmd "gpg -q --for-your-eyes-only --no-tty -d ~/.murat.gpg"
SSLType IMAPS
CertificateFile /etc/ssl/certs/ca-certificates.crt

IMAPStore murat-remote
Account murat

MaildirStore murat-local
SubFolders Verbatim
# The trailing "/" is important
Path ~/.mail/murat/
Inbox ~/.mail/murat/Inbox

Channel murat-inbox
Master :murat-remote:
Slave :murat-local:
Patterns *
Create Slave
Sync All
Expunge Both
SyncState *

Channel murat-sent
Master :murat-remote:
Slave :murat-local:
Patterns "Sent"
Create Slave
Sync All
Expunge Both
SyncState *

Channel murat-spam
Master :murat-remote:
Slave :murat-local:
Patterns "Spam"
Sync All
Expunge Both
SyncState *

Channel murat-drafts
Master :murat-remote:
Slave :murat-local:
Patterns "Drafts"
Create slave
Sync All
Expunge Both
SyncState *

Channel murat-trash
Master :murat-remote:
Slave :murat-local:
Patterns "Trash"
Create Slave
Sync All
Expunge Both
SyncState *

Channel murat-archive
Master :murat-remote:
Slave :murat-local:
Patterns "Arc*"
Create Slave
Sync All
Expunge Both
SyncState *

Group mur
Channel murat-inbox
Channel murat-spam
Channel murat-drafts
Channel murat-trash
Channel murat-sent
Channel murat-archive

IMAPAccount tuw
Host mail.intern.tuwien.ac.at
User amccartn@intern
AuthMechs LOGIN
PassCmd "gpg -q --for-your-eyes-only --no-tty -d ~/.tuw.gpg"
SSLType IMAPS
CertificateFile /etc/ssl/certs/ca-certificates.crt

IMAPStore tuw-remote
Account tuw

MaildirStore tuw-local
SubFolders Verbatim
Path ~/.mail/tuw/
Inbox ~/.mail/tuw/Inbox

Channel tuw-inbox
Master :tuw-remote:
Slave :tuw-local:
Patterns *
Create Slave
Sync All
Expunge Both
SyncState *

Channel tuw-calendar
Master :tuw-remote:
Slave :tuw-local:
Patterns "Calendar"
Create Slave
Sync All
Expunge Both
SyncState *

Channel tuw-sent
Master :tuw-remote:
Slave :tuw-local:
Patterns "Sent Items"
Create Slave
Sync All
Expunge Both
SyncState *

Channel tuw-drafts
Master :tuw-remote:
Slave :tuw-local:
Patterns "Drafts"
Create Slave
Sync All
Expunge Both
SyncState *

Channel tuw-archive
Master :tuw-remote:
Slave :tuw-local:
Patterns "Archive"
Create Slave
Sync All
Expunge Both
SyncState *

Channel tuw-deleted-items
Master :tuw-remote:
Slave :tuw-local:
Patterns "Deleted Items"
Create Slave
Sync All
Expunge Both
SyncState *

Channel tuw-junk-email
Master :tuw-remote:
Slave :tuw-local:
Patterns "Junk Email"
Create Slave
Sync All
Expunge Both
SyncState *

Group tuw
Channel tuw-inbox
Channel tuw-calendar
Channel tuw-sent
Channel tuw-drafts
Channel tuw-archive
Channel tuw-deleted-items
Channel tuw-junk-email
#+end_src

* Dependencies 

Add a few packages to the manifests.

#+begin_src shell :tangle .config/debian/manifests/mail
maildir-utils
isync
#+end_src
