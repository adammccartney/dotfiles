# -*- mode: sh -*-
NO_COLOUR="\[\033[0m\]"

BLUE="\[\e[38;5;39m\]"
YELLOW="\[\e[38;5;226m\]"
GREEN="\[\e[38;5;77m\]"
WHITE="\[\e[38;5;255m\]"

#PS1="\[\033[s\033[0;0H\033[0;49m\033[K\033[1;33m\t\033[u\]<\u@\h \W>\$"
#export PS1='<\u@\h \W>$(__git_ps1 " (%s)")\$'

# based on https://jdhao.github.io/2021/03/31/bash_prompt_config/
# Detect whether the current directory is a git repository.
function is_git_repository() {
  git branch > /dev/null 2>&1
}

function set_git_branch () {
    # Note that for new repo without commit, git rev-parse --abbrev-ref HEAD
    # will error out.
    if git rev-parse --abbrev-ref HEAD > /dev/null 2>&1; then
        BRANCH=$(git rev-parse --abbrev-ref HEAD)
    else
        BRANCH="bare repo!"
    fi
}

function set_virtual_env () {
    if test -z ${VIRTUAL_ENV}; then
        PYTHON_VIRTUAL_ENV=""
    else
        PYTHON_VIRTUAL_ENV="${WHITE}[`basename \"$VIRTUAL_ENV\"`]${NO_COLOR} "
    fi
}

function set_bash_prompt () {

    if is_git_repository; then
        if [ -f ~/git-prompt.sh ]; then
            . ~/git-prompt.sh
            export GIT_PS1_SHOWDIRTYSTATE=1
            BRANCH=$(__git_ps1 " (%s)")
        else
            set_git_branch
        fi
    else
        BRANCH=''
    fi

    set_virtual_env

    PS1=""
    PS1+="${PYTHON_VIRTUAL_ENV}"
    # set up user and host
    PS1+="${BLUE}\u@\h${BLUE} "
    # set up working directory
    PS1+="${YELLOW}\w${NO_COLOR} "
    # set up git branch
    PS1+="${GREEN}${BRANCH}${NO_COLOR}\n"
    # set up prompt character
    PS1+="${WHITE}>${WHITE} "

    # Automatically added by the Guix install script.
    if [ -n "$GUIX_ENVIRONMENT" ]; then
        if [[ $PS1 =~ (.*)"\\$" ]]; then
            PS1="${BASH_REMATCH[1]} [env]\\\$ "
        fi
    fi

}

export PROMPT_COMMAND=set_bash_prompt
