# -*- mode: sh -*-
NO_COLOUR="\[\033[0m\]"

BLUE="\[\e[38;5;39m\]"
YELLOW="\[\e[38;5;226m\]"
GREEN="\[\e[38;5;77m\]"
WHITE="\[\e[38;5;255m\]"

#PS1="\[\033[s\033[0;0H\033[0;49m\033[K\033[1;33m\t\033[u\]<\u@\h \W>\$"
#export PS1='<\u@\h \W>$(__git_ps1 " (%s)")\$'

# based on https://jdhao.github.io/2021/03/31/bash_prompt_config/
# Detect whether the current directory is a git repository.
function is_git_repository() {
  git branch > /dev/null 2>&1
}

function __ad_git_ps1 () {

    # set_git_branch
    # Note that for new repo without commit, git rev-parse --abbrev-ref HEAD
    # will error out.
    if git rev-parse --abbrev-ref HEAD > /dev/null 2>&1; then
        BRANCH="$(git rev-parse --abbrev-ref HEAD)"
    else
        BRANCH="bare repo!"
    fi

    # set_git_tree_state 
    git diff --no-ext-diff --quiet || w="*"
    git diff --no-ext-diff --cached --quiet || i="+"

    local f="$w$i"
    gitstring=$(printf -- "($BRANCH${f:+$f})")
    PS1+="${GREEN}${gitstring}${NO_COLOR} "
}

function set_virtual_env () {
    if test -z ${VIRTUAL_ENV}; then
        PYTHON_VIRTUAL_ENV=""
    else
        PYTHON_VIRTUAL_ENV="${WHITE}[`basename \"$VIRTUAL_ENV\"`]${NO_COLOR} "
    fi
}

function set_bash_prompt () {

    PS1=""
    # Python virtual environment
    set_virtual_env
    PS1+="${PYTHON_VIRTUAL_ENV}"
    # set up user and host
    PS1+="${BLUE}\u@\h${BLUE} "

    ## Set git prompt
    if is_git_repository; then
        __ad_git_ps1
    fi
    # set up working directory
    PS1+="${YELLOW}\w${NO_COLOR} \n"

    # set up prompt character
    PS1+="${WHITE}>${WHITE} "

    ### Guix
    # Automatically added by the Guix install script.
    if [ -n "$GUIX_ENVIRONMENT" ]; then
        PS1="\u@\h \w [env]\$ \n"
        PS1+="> "
        export PS1
        if [ -z "${GUILE_EXTENSIONS_PATH-}" ]; then
            export GUILE_EXTENSIONS_PATH="$GUIX_ENVIRONMENT/lib"
        else
            GUILE_EXTENSIONS_PATH="$GUIX_ENVIRONMENT/lib:$GUILE_EXTENSIONS_PATH"
        fi
    fi
}

export PROMPT_COMMAND=set_bash_prompt
