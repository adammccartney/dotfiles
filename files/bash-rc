# -*- mode: sh -*-

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoredups

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=100000
HISTFILESIZE="$HISTSIZE"
HISTFILE="$XDG_CACHE_HOME/.bash_history"

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias dir='dir --color=auto'
    alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
#alias ll='ls -l'
#alias la='ls -A'
#alias l='ls -CF'

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

[ -f ~/.fzf.bash ] && source ~/.fzf.bash

# git tools
[ -f ~/git-completion.bash ] && . ~/git-completion.bash

# TODO: the rhel style of sourcing might be handier here:
#if [ -d ~/.bashrc.d ]; then
#    for rc in ~/.bashrc.d/*; do
#        if [ -f "$rc" ]; then
#            . "$rc"
#        fi
#    done
#fi

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

if [ -f ~/.bash_functions ]; then
  . ~/.bash_functions
fi

if [ -f ~/.bash_env ] ; then
    . ~/.bash_env
fi

### Guix
# Automatically added by the Guix install script.
if [ -n "$GUIX_ENVIRONMENT" ]; then
    if [[ $PS1 =~ (.*)"\\$" ]]; then
        PS1="${BASH_REMATCH[1]} [env]\\\$ "
    fi
    if [ -z "${GUILE_EXTENSIONS_PATH-}" ]; then
        export GUILE_EXTENSIONS_PATH="$GUIX_ENVIRONMENT/lib"
    else
        GUILE_EXTENSIONS_PATH="$GUIX_ENVIRONMENT/lib:$GUILE_EXTENSIONS_PATH"
    fi
fi

if [ -z "$GUIX_ENVIRONMENT" ]; then
    if [ -f ~/.bash_prompt ]; then
        . ~/.bash_prompt
        set_bash_prompt
    fi
fi



# guix bash completion
GUIX_BASH_COMPLETION="/var/guix/profiles/per-user/root/current-guix/etc/bash_completion.d/guix"
if [ -f ${GUIX_BASH_COMPLETION} ]; then
    . ${GUIX_BASH_COMPLETION}
fi

# Guix Profile stuff
#if [ -z ${GUIX_PROFILE} ]; then # none active
guix_activate_profile  # try to activate host profile

guix_activate_root_profiles  # possibly activate anything we have in /opt/guix/extra-profiles

# use emacs keybindings
set -o emacs

# swap the control and caps key
swap_ctrl_caps

# idempotent kubectl setup
if command kubectl &> /dev/null; then
    source <(kubectl completion bash)
    complete -o default -F __start_kubectl k
fi


FZF="$(which fzf)"
if [[ "$FZF" =~ "guix" ]]; then
    FZF_BASH_COMPLETIONS="$(dirname $(dirname $(realpath "$FZF")))/etc/bash_completion.d/fzf"
    if [ -f "${FZF_BASH_COMPLETIONS}" ]; then
        . "${FZF_BASH_COMPLETIONS}"
    fi
fi

FZF_KEYBINDINGS_PATH="$HOME/.fzf.keybindings.bash"
if [ -f ${FZF_KEYBINDINGS_PATH} ]; then
    . ${FZF_KEYBINDINGS_PATH}
fi

if [[ -f "~/vsc-repos.txt" ]]; then
    complete -W"`<~/vsc-repos.txt`" tu_gitlab_clone
fi

if [ -f "$HOME/.local/bin/virtualenvwrapper.sh" ]; then
    . $HOME/.local/bin/virtualenvwrapper.sh
fi


